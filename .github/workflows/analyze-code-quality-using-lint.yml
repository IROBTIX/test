name: Android Code Quality Check using Lint

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  lint:
    name: Run Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history so merge-base works

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Get modified files (vs main)
        id: modified-files
        run: |
          git fetch origin main

          BASE_BRANCH="${GITHUB_BASE_REF:-main}"

          git merge-base origin/$BASE_BRANCH HEAD > /dev/null || {
            echo "‚ùå No merge base between HEAD and origin/$BASE_BRANCH"
            exit 1
          }

          git diff --name-only origin/$BASE_BRANCH...HEAD | grep -E '\.(kt|java)$' > modified_files.txt || touch modified_files.txt

          echo "üìÅ Modified files:"
          cat modified_files.txt

      - name: Run Android Lint only on modified files
        run: |
          MODIFIED_FILES=$(cat modified_files.txt)
          if [ -n "$MODIFIED_FILES" ]; then
            echo "Linting files:"
            echo "$MODIFIED_FILES"
            ./gradlew lint -Plint.analyzeOnly=$(paste -sd "," modified_files.txt) || exit 1
          else
            echo "No Java or Kotlin files modified. Skipping Lint."
          fi
